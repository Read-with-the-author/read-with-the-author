# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
    router.request_context.host: '%env(SITE_BASE_HOST)%'
    site_base_scheme: '%env(SITE_BASE_SCHEME)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $siteBaseScheme: '%site_base_scheme%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    LeanpubBookClub\Infrastructure\Symfony\Controller\:
        resource: '../src/LeanpubBookClub/Infrastructure/Symfony/Controller'
        tags: ['controller.service_arguments']

    LeanpubBookClub\Infrastructure\Symfony\Command\:
        resource: '../src/LeanpubBookClub/Infrastructure/Symfony/Command'

    LeanpubBookClub\Infrastructure\Symfony\Form\:
        resource: '../src/LeanpubBookClub/Infrastructure/Symfony/Form'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    LeanpubBookClub\Application\ApplicationInterface:
        factory: ['@LeanpubBookClub\Infrastructure\ProductionServiceContainer', 'application']
        public: true

    LeanpubBookClub\Application\EventDispatcher:
        factory: ['@LeanpubBookClub\Infrastructure\ProductionServiceContainer', 'eventDispatcher']

    LeanpubBookClub\Domain\Model\Member\MemberRepository:
        factory: ['@LeanpubBookClub\Infrastructure\ProductionServiceContainer', 'memberRepository']

    LeanpubBookClub\Application\Assets: '@LeanpubBookClub\Infrastructure\PublicAssetPublisher'

    LeanpubBookClub\Application\AssetPublisher: '@LeanpubBookClub\Infrastructure\PublicAssetPublisher'

    LeanpubBookClub\Infrastructure\PublicAssetPublisher:
        arguments:
            - '%kernel.project_dir%/var/assets'

    LeanpubBookClub\Infrastructure\Leanpub\BookSlug:
        factory: ['@LeanpubBookClub\Infrastructure\Configuration', 'leanpubBookSlug']

    LeanpubBookClub\Infrastructure\Leanpub\ApiKey:
        factory: ['@LeanpubBookClub\Infrastructure\Configuration', 'leanpubApiKey']

    LeanpubBookClub\Infrastructure\Leanpub\BookSummary\GetBookSummaryFromLeanpubApi: ~

    LeanpubBookClub\Infrastructure\Leanpub\BookSummary\CachedGetBookSummary:
        decorates: LeanpubBookClub\Infrastructure\Leanpub\BookSummary\GetBookSummaryFromLeanpubApi

    LeanpubBookClub\Infrastructure\Leanpub\BookSummary\GetBookSummary: '@LeanpubBookClub\Infrastructure\Leanpub\BookSummary\CachedGetBookSummary'

    LeanpubBookClub\Infrastructure\ProductionServiceContainer:
        public: '%kernel.debug%'

    LeanpubBookClub\Infrastructure\Configuration:
        arguments:
            - '%env(LEANPUB_BOOK_SLUG)%'
            - '%env(LEANPUB_API_KEY)%'
            - '%env(SYSTEM_EMAIL_ADDRESS)%'
            - '%env(AUTHOR_TIMEZONE)%'

    LeanpubBookClub\Infrastructure\Symfony\SymfonyMailer:
        public: '%kernel.debug%'

    LeanpubBookClub\Application\Email\Mailer: '@LeanpubBookClub\Infrastructure\Symfony\SymfonyMailer'

    LeanpubBookClub\Domain\Model\Common\EmailAddress:
        factory: ['@LeanpubBookClub\Infrastructure\Configuration', 'systemEmailAddress']

    LeanpubBookClub\Infrastructure\Symfony\AddFlashMessageToSession:
        public: true

    LeanpubBookClub\Infrastructure\Symfony\LogEvents:
        public: true

    LeanpubBookClub\Infrastructure\Symfony\Security\AccessTokenAuthenticator: ~

    LeanpubBookClub\Infrastructure\Symfony\Security\MemberUserProvider: ~

    LeanpubBookClub\Domain\Model\Common\TimeZone:
        factory: ['@LeanpubBookClub\Infrastructure\Configuration', 'authorTimeZone']

    LeanpubBookClub\Infrastructure\Leanpub\BookSummary\BookSummary:
        factory: ['@LeanpubBookClub\Infrastructure\Leanpub\BookSummary\GetBookSummary', 'getBookSummary']

    LeanpubBookClub\Infrastructure\Symfony\SetSchemeOnRequestContext: ~

    LeanpubBookClub\Infrastructure\Symfony\Validation\UniqueLeanpubInvoiceIdConstraintValidator: ~
    LeanpubBookClub\Infrastructure\Symfony\Validation\ExistingLeanpubInvoiceIdConstraintValidator: ~
